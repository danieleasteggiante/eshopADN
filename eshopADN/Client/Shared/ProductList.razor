@inject IProductService ProductService
@implements IDisposable
@if (ProductService.Products.Count == 0)
{
    <span>Loading...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var p in ProductService.Products)
        {
            <li class="media mt-3">
                <div class="media-img-wrapper">
                    <a href="#">
                        <img class="media-img" src="@p.ImagePath" alt="@p.Titolo"/>
                    </a>
                </div>
                <div class="media-body">
                    <a href="/product/@p.Id">
                        <h4 class="mb-0">@p.Titolo</h4>
                    </a>
                    <p>@p.Descrizione</p>
                    @if (p.IsAvailable)
                    {
                        <span>Disponibile</span>
                        <a href="#">acquista a questo link</a>
                    }
                    else
                    {
                        <span>Disponibile su richiesta</span>
                    }
                    <h5 class="price">
                        $@p.Prezzo
                    </h5>
                </div>
            </li>
        }
    </ul>
}
@code
{
    protected override void OnInitialized()
    {
        ProductService.ProductChange += StateHasChanged;
    }
    
    public void Dispose()
    {
        ProductService.ProductChange -= StateHasChanged;
    }
}