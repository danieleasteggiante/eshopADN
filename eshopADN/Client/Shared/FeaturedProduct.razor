@inject IProductService ProductService
@implements IDisposable

<center><h2>Top Prodotti del giorno</h2></center>
@if(ProductService.Products == null || ProductService.Products.Count == 0)
{
    <span>@ProductService.Message</span>
}
else
{
    <div class="container">
            @foreach (var product in ProductService.Products)
            {
                @if (product.Featured)
                {
                    <div class="featured-product">
                        <div>
                            <a href="product/@product.Id">
                                <img src="@product.ImagePath"/>
                            </a>
                        </div>
                        <h4><a href="product/@product.Id">@product.Titolo</a></h4>

                        @if (product.ProductVariants.Count > 0)
                        {
                            <h5 class="price">@product.ProductVariants[0].Price</h5>
                        }
                    </div>
                }
            }
    </div>
}

@code {
    protected override void OnInitialized()
    {
        ProductService.ProductChange += StateHasChanged;
    }
    
    public void Dispose()
    {
        ProductService.ProductChange -= StateHasChanged;
    }
    
}