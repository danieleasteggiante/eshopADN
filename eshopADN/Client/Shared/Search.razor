@inject NavigationManager NavigationManager;
@inject IProductService ProductService;

<div class="input-group">
    
    <input @bind-value="searchText"
           @bind-value:event="oninput"
           type="search"
           list="products"
           @onkeyup="HandleSearchText"
           class="form-control"
           placeholder="Search..."
           @ref="searchInput"/>
    <datalist id="products">
        @foreach (var suggestion in suggestions)
        {
            <option value="@suggestion"></option>
        }
    </datalist>
    <div class="input-group-append">
        <button class="btn btn-outline-secondary" type="button" @onclick="SearchProduct">Search</button>
    </div>
</div>

@code {
    // bind-value and bind-value:event servono per leggere e aggiornare il valore della propriet√† searchText

    private string searchText = string.Empty;
    private List<string> suggestions = new List<string>();
    protected ElementReference searchInput;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
           await searchInput.FocusAsync();
        }
    }
    protected void SearchProduct()
    {
        NavigationManager.NavigateTo($"/search/{searchText}");
    }
    public async Task HandleSearchText(KeyboardEventArgs args)
    {
       if(args.Code == "Enter")
       {
           SearchProduct();
       }
       else
       {
           suggestions = await ProductService.GetSuggestions(searchText);
       }
    }
}